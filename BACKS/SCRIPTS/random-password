#!/bin/bash
#author: Patryk Basko

#RANDOM password generator

echo -e "RANDOM password\n**********\n"
password=$( tr -dc '[:lower:][:upper:][:digit:]@_' < /dev/urandom | head -c 20)
echo "Password: $password"

char_1=$(echo "${password:$(( RANDOM % ${#password} )):1}")
echo $char_1
char_2=$(echo "${password:$(( RANDOM % ${#password} )):1}")
echo $char_2
char_3=$(echo "${password:$(( RANDOM % ${#password} )):1}")
echo $char_3
char_4=$(echo "${password:$(( RANDOM % ${#password} )):1}")
echo $char_4





if [[ $password =~ [[:lower:]] ]]; then

#char_1=$( tr -dc '[:lower:]' < /dev/urandom | head -c 1)
#echo "Char after change: $char_1"

	echo "Password contains one letter char"

	if [[ $password =~ [[:upper:]] && $password =~ [[:digit:]] ]]; then
	echo "Password contain one upper and digit char"
fi
fi

if [[ $password =~ "@" ]]; then
echo "Password contain @"
	if [[ $password =~ "_" ]]; then
	echo "Password contain _"

fi
fi
echo "dupa"

#--------LOOPING------------------

#read -p "How many password you want to generate?" count

#for (( max=0; $max<$count; max++ ))
#do
#password=$( tr -dc '[:lower:][:upper:][:digit:]@_' < /dev/urandom | head -c 20)
#echo "Password: $password"
#done


#if (( $password != *[[:lower:]]* )); then
#echo "You dont have lower case!"
#random_string=$(shuf -n 1 $password)
#echo "Random string: $random_string"
#elif
#[[ $password != *[[:upper:]]* ]]; then
#echo "You dont have upper case!"
#elif
#[[ $password != *[[:digit:]]* ]]; then
#echo "You dont have digit!"
#elif
#[[ $password != *@* ]]; then
#echo "You dont have @ !"
#elif
#[[ $password != *_* ]]; then
#echo "You dont have _ !"
#fi

#echo "Is good!"
	

